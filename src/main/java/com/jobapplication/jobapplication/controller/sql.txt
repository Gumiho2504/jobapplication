-- Create the jobapplication database
CREATE DATABASE jobapplication;

#################################################################################################

-- Use the newly created database
USE jobapplication;

-- Create the Job table
CREATE TABLE Job (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT NOT NULL,
    location VARCHAR(255) NOT NULL,
    company VARCHAR(255) NOT NULL,
    type VARCHAR(255) NOT NULL
);

#################################################################################################

-- Insert initial data into the Job table
INSERT INTO Job (title, description, location, company, type) VALUES
('Software Engineer', 'Develop and maintain software applications.', 'New York, NY', 'Tech Corp', 'Full-time'),
('Data Scientist', 'Analyze and interpret complex data sets.', 'San Francisco, CA', 'Data Inc', 'Full-time'),
('Project Manager', 'Manage software development projects.', 'Austin, TX', 'ManageIT', 'Contract'),
('UX Designer', 'Design user interfaces and experiences.', 'Seattle, WA', 'DesignHub', 'Part-time'),
('Backend Developer', 'Develop server-side logic, definition, and maintenance of the central database.', 'Chicago, IL', 'CodeBase', 'Full-time');




use jobapplication;

CREATE TABLE User (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    firstName VARCHAR(255) NOT NULL,
    lastName VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    password VARCHAR(255) NOT NULL
);


INSERT INTO User (firstName, lastName, email, password) VALUES
('John', 'Doe', 'john.doe@example.com', 'password123'),
('Jane', 'Smith', 'jane.smith@example.com', 'password123'),
('Alice', 'Johnson', 'alice.johnson@example.com', 'password123'),
('Bob', 'Brown', 'bob.brown@example.com', 'password123'),
('Charlie', 'Davis', 'charlie.davis@example.com', 'password123'),
('David', 'Miller', 'david.miller@example.com', 'password123'),
('Eva', 'Wilson', 'eva.wilson@example.com', 'password123'),
('Frank', 'Moore', 'frank.moore@example.com', 'password123'),
('Grace', 'Taylor', 'grace.taylor@example.com', 'password123'),
('Hannah', 'Anderson', 'hannah.anderson@example.com', 'password123');


#################################################################################################

use jobapplication;

ALTER TABLE Job
ADD COLUMN user_id INT DEFAULT NULL;

ALTER TABLE Job
ADD PRIMARY KEY (id);

ALTER TABLE Job
ADD CONSTRAINT FK_DETAIL
FOREIGN KEY (user_id)
REFERENCES _user(id);

####################################################################################################

// add User Detail
#################################################################################################

use jobapplication;

CREATE TABLE _user_detail (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    description TEXT
);

-- Alter the _user table to add the user_detail_id column if not exists
-- ALTER TABLE _user
-- ADD COLUMN IF NOT EXISTS user_detail_id BIGINT;

-- Add the foreign key constraint to establish the one-to-one relationship between _user and _user_detail
-- ALTER TABLE _user
-- ADD CONSTRAINT fk_user_user_detail
-- FOREIGN KEY (user_detail_id) REFERENCES _user_detail(id)
-- ON DELETE CASCADE
-- ON UPDATE CASCADE;

-- Create the education table
CREATE TABLE education (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    school VARCHAR(255),
    field VARCHAR(255),
    start_date DATE,
    end_date DATE,
    description TEXT,
    user_detail_id BIGINT,

    -- Define the foreign key constraint
    FOREIGN KEY (user_detail_id) REFERENCES _user_detail(id)
        ON DELETE SET NULL
        ON UPDATE CASCADE
);

-- Create the skill table
CREATE TABLE skill (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255),
    user_detail_id BIGINT,

    -- Define the foreign key constraint
    FOREIGN KEY (user_detail_id) REFERENCES _user_detail(id)
        ON DELETE SET NULL
        ON UPDATE CASCADE
);

-- Create the experience table
CREATE TABLE experience (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(255),
    description TEXT,
    company VARCHAR(255),
    start_date DATE,
    end_date DATE,
    is_working BOOLEAN,
    user_detail_id BIGINT,


    -- Define the foreign key constraint
    FOREIGN KEY (user_detail_id) REFERENCES _user_detail(id)
        ON DELETE SET NULL
        ON UPDATE CASCADE
);


